---
#Jeff Comer
#Ansible playbook to add devices to NSO

- hosts: localhost
  gather_facts: no
  vars:
    url: http://172.16.14.33:8080/jsonrpc

  tasks:
  - read_csv:
      path: ../$varPath/nso/nsoDevices2.csv
    register: devlist

  - name: CREATE AuthGroup IN NSO
    cisco.nso.nso_config:
      url: "{{ url }}"
      username: ncsadmin
      password: ncsadmin
      data:
        tailf-ncs:devices:
          authgroups:
            group:
              - name: "{{ devices.authGroupName }}"
                default-map:
                  remote-name: "{{ devices.authGroupUser }}"
                  remote-password: "{{ devices.authGroupPw | b64decode }}"
                  remote-secondary-password: "{{ devices.authGroupPw | b64decode }}"
    loop: "{{ devlist.list }}"
    loop_control:
      loop_var: devices
    when: (devices.authGroupName != "")

  - name: ADD NXOS DEVICES IN NSO
    cisco.nso.nso_config:
      url: "{{ url }}"
      username: ncsadmin
      password: ncsadmin
      data:
        tailf-ncs:devices:
          device:
           - address: "{{ devices.deviceIp }}"
             description: CONFIGURED BY ANSIBLE!
             name: "{{ devices.deviceName }}"
             authgroup: "{{ devices.authGroup }}"
             device-type:
               cli:
                 ned-id: "{{ devices.nedId }}"
             port: "22"
             state:
               admin-state: "unlocked"
             ssh:
               host-key-verification: "none"
    loop: "{{ devlist.list }}"
    loop_control:
      loop_var: devices
    when: (devices.deviceType == "nxos")

  - name: ADD IOSXE DEVICES IN NSO
    cisco.nso.nso_config:
      url: "{{ url }}"
      username: ncsadmin
      password: ncsadmin
      data:
        tailf-ncs:devices:
          device:
           - address: "{{ devices.deviceIp }}"
             name: "{{ devices.deviceName }}"
             authgroup: "{{ devices.authGroup }}"
             device-type:
               cli:
                 ned-id: "{{ devices.nedId }}"
             port: "22"
             state:
               admin-state: "unlocked"
             ssh:
               host-key-verification: "none"
    loop: "{{ devlist.list }}"
    loop_control:
      loop_var: devices
    when: (devices.deviceType == "iosxe")

  - name: ADD APICs TO NSO
    cisco.nso.nso_config:
      url: "{{ url }}"
      username: ncsadmin
      password: ncsadmin
      data:
        tailf-ncs:devices:
          device:
           - address: "{{ devices.deviceIp }}"
             name: "{{ devices.deviceName }}"
             authgroup: "{{ devices.authGroup }}"
             local-user: admin
             device-type:
               generic:
                 ned-id: "{{ devices.nedId }}"
             ned-settings:
               tailf-ned-cisco-apicdc-meta:cisco-apicdc:
                 config-path: "/home/thor/aci"
                 local-host: False
                 host: "172.16.14.132"
                 user-name: "thor"
                 user-password: "THORP@ssw0rd"
             ssh:
               host-key-verification: "none"
             port: "443"
             state:
               admin-state: "unlocked"
    loop: "{{ devlist.list }}"
    loop_control:
      loop_var: devices
    when: (devices.deviceType == "aci")

  - name: Add FMC to  NSO
    cisco.nso.nso_config:
      url: "{{ url }}"
      username: ncsadmin
      password: ncsadmin
      data:
        tailf-ncs:devices:
          device:
           - address: "{{ devices.deviceIp }}"
             name: "{{ devices.deviceName }}"
             authgroup: "{{ devices.authGroup }}"
             local-user: admin
             device-type:
               generic:
                 ned-id: "{{ devices.nedId }}"
             ned-settings:
               tailf-ned-cisco-fmc-meta:cisco-fmc:
                 cisco-fmc-connection:
                   ssl:
                     accept-any: true
             ssh:
               host-key-verification: "none"
             port: "443"
             state:
               admin-state: "unlocked"
    loop: "{{ devlist.list }}"
    loop_control:
      loop_var: devices
    when: (devices.deviceType == "fmc")

  - name: Fetch ssh host keys
    cisco.nso.nso_action:
      url: "{{ url }}"
      username: ncsadmin
      password: ncsadmin
      path: /ncs:devices/fetch-ssh-host-keys
      input: {}

  - name: Connect to Device
    cisco.nso.nso_action:
      url: "{{ url }}"
      username: ncsadmin
      password: ncsadmin
      path: /ncs:devices/device{"{{ devices.deviceName }}"}/connect
      input: {}
    loop: "{{ devlist.list }}"
    loop_control:
      loop_var: devices

  - name: Sync From Device
    cisco.nso.nso_action:
      url: "{{ url }}"
      username: ncsadmin
      password: ncsadmin
      path: /ncs:devices/device{"{{ devices.deviceName }}"}/sync-from
      input: {}
    loop: "{{ devlist.list }}"
    loop_control:
      loop_var: devices
